name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    branches: [main]
    types: [completed]

jobs:
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.conclusion == 'success' &&
      github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Get CI workflow artifacts
        uses: actions/github-script@v7
        id: check-artifact
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id,
            });
            return artifacts.data.artifacts.some(artifact => artifact.name === 'production-build');

      - name: Cache Pages config
        if: steps.check-artifact.outputs.result == 'true'
        uses: actions/cache@v4
        with:
          path: .github/pages
          key: ${{ runner.os }}-pages-${{ hashFiles('.github/pages/**') }}
          restore-keys: ${{ runner.os }}-pages-

      - name: Download built artifact
        if: steps.check-artifact.outputs.result == 'true'
        uses: actions/download-artifact@v4
        with:
          name: production-build
          path: dist
          run_id: ${{ github.event.workflow_run.id }}

      - name: Configure GitHub Pages
        if: steps.check-artifact.outputs.result == 'true'
        uses: actions/configure-pages@v4
        with:
          static_site_generator: vite

      - name: Upload deployment bundle
        if: steps.check-artifact.outputs.result == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/

      - name: Deploy to GitHub Pages
        if: steps.check-artifact.outputs.result == 'true'
        id: deployment
        uses: actions/deploy-pages@v4
